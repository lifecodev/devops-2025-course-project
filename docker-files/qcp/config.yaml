---
# Пример конфигурационного файла

# Адрес, который прослушивает QCP
listening_address: 0.0.0.0:8080

# Необязательноые поле. Адрес для команд контроля
# ctrl_address: 127.0.0.1:1512

# Необязательное поле. Уровень логгирования
# log_level: Error # Логируются только ошибки
# log_level: Warn # Логируются предыдущие уровни, а также предупреждения
log_level: Info # Логируются предыдущие уровни, а также информационные сообщения (по умолчанию)
# log_level: Debug # Логируются предыдущие уровни, а также отладочные данные
# log_level: Trace # Логируется всё подряд
# log_level: Off # Логирование отключено

# Необязательное поле. "Куда" отправлять логи
log_output: stderr # Стандартный вывод ошибок (по умолчанию)
# log_output: stdout # Стандартный вывод
# log_output: # Вывод в файл
#     file: /tmp/qcp.log # Путь к файлу

# Необязательное поле. Раскраска логов
log_colouring: auto # Раскрашивать логи при выводе в stdout/stderr, не раскрашивать при выводе в
                    # файл (по умолчанию)
# log_colouring: off # Не раскрашивать логи безусловно
# log_colouring: on # Раскрашивать логи безусловно

# Необязательное поле. После какого "перерыва" клиент считается неактивным.
client_inactivity_timeout: "30 sec"

# Необязательное поле. Политика попыток переподключения к серверам.
servers_retry_back_off:
    min_wait: "5 sec"  # Минимальное время ожидания между переподключениями
    max_wait: "15 sec" # Максимальное время ожидания между переподключениями
    max_wait_at: 30    # Номер попытки, к которой должно быть достигнуто максимальное время между
                       # переподключениями.

# Список серверов баз данных, к которым подсоединяется QCP
servers:
    # Первый сервер
    - address: # Тип соединения (Tcp или Unix Domain Socket)
        Tcp: "127.0.0.1:5432"
      backends: # Количество подключений к данному серверу баз данных
          initial: 1 # .. при старте пула
          min: 1     # .. минимальное
          max: 100   # .. максимальное
      username: %USER%   # Имя пользователя
      # password: password # Необязательный параметр — пароль для аутентификации
      database: %DATABASE% # Необязательный параметр — имя базы данных
      inactive_timeout: "1 min" # Необязательная параметр — временной интервал, после которого
                                # неактивное соединение к серверу будет закрыто.
      lifetime: "15 min" # Необязательная параметр — примерное максимальное время жизни
                         # соединения к серверу, по истечении которого оное будет закрыто.
      # options: # Необязательный параметр — дополнительные параметры подключения,
      #          # передаваемые базе данных
      #     option_name: option_value

# Конфигурация памяти (опционально)
arena:
    chunk_size: 66560  # Размер одного "куска" памяти, в байтах

    # Общее количество потребляемой памяти можно указать либо используя параметр
    # "количество кусков памяти":
    chunks_count: 3150 # Количество таких "кусков"
    # # ... или указав общее количество напрямую:
    # total_size: 3.1 GB # Поддерживаются суффиксы B, KB, MB, GB

# Режим работы пула (опционально)
relay_mode: Smart # "Умный" режим работы (по умолчанию)
# relay_mode: Session # Сессионный режим работы

# # Ненулевой идентификатор сборщика метрик (опционально)
# collector_id: 100500

# Параметры аутентификации
authentication:
    method: TRUST
    # method: MD5                                 # метод/алгоритм аутентификации, возможные варианты: TRUST, MD5
    # username: test                              # логин
    # password: 05a671c66aefea124cc08b76ea6d30bb  # md5 хеш: md5(concat(password, username)). Пример для пароля test
